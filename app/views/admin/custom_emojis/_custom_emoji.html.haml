.batch-table__row
  %label.batch-table__row__select.batch-table__row__select--aligned.batch-checkbox
    = f.check_box :custom_emoji_ids, { multiple: true, include_hidden: false }, custom_emoji.id
  .batch-table__row__content.batch-table__row__content--with-image
    .batch-table__row__content__image
      = custom_emoji_tag(custom_emoji, animate = current_account&.user&.setting_auto_play_emoji)

    .batch-table__row__content__text
      %p
        %samp= ":#{custom_emoji.shortcode}:"
        - if custom_emoji.local?
          %span.account-role.bot= custom_emoji.category&.name || t('admin.custom_emojis.uncategorized')
        - unless custom_emoji.none_permission?
          %span.account-role.copy-permission{ class: custom_emoji.copy_permission }= t("admin.custom_emojis.copy_permission.#{custom_emoji.copy_permission}")
      %p
        %span.keyword= custom_emoji.keywords
      %p
        %span.license= custom_emoji.license

    .batch-table__row__content__extra
      - if custom_emoji.local?
        = t('admin.accounts.location.local')
      - else
        = custom_emoji.domain

        - if custom_emoji.local_counterpart.present?
          &bull;
          = t('admin.accounts.location.local')

      %br/

      - if custom_emoji.disabled?
        = t('admin.custom_emojis.disabled')
      - else
        = t('admin.custom_emojis.enabled')
      - if custom_emoji.local?
        &bull;
        - if custom_emoji.visible_in_picker?
          = t('admin.custom_emojis.listed')
        - else
          = t('admin.custom_emojis.unlisted')

      - if custom_emoji.local?
        %br/
        = table_link_to 'pencil', t('admin.custom_emojis.edit.title'), edit_admin_custom_emoji_path(custom_emoji, params.slice(:page, *CustomEmojiFilter::KEYS).permit(:page, *CustomEmojiFilter::KEYS))
