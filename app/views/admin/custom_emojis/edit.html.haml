- content_for :page_title do
  = t('.title')

= simple_form_for @custom_emoji, url: admin_custom_emoji_path(@custom_emoji), method: :put do |f|
  = render 'shared/error_messages', object: @custom_emoji

  = hidden_field_tag :page, params[:page] || 1

  - CustomEmojiFilter::KEYS.each do |key|
    = hidden_field_tag key, params[key] if params[key].present?

  .fields-group.emoji-detail
    = custom_emoji_tag(@custom_emoji, animate = current_account&.user&.setting_auto_play_gif)
    %samp= ":#{@custom_emoji.shortcode}:"
    - if @custom_emoji.local?
      %span.account-role.bot= @custom_emoji.category&.name || t('admin.custom_emojis.uncategorized')
  - if @custom_emoji.is_based_on.present?
    .fields-group.emoji-detail
      %span.keyword= @custom_emoji.is_based_on
      - if @custom_emoji.org_category.present?
        %span.account-role.bot= @custom_emoji.org_category
  .fields-group
    .input.with_label.integer.optional.custom_emoji_category_id
      .label_input
        = f.label :category_id, label: t('admin.custom_emojis.category')
        .fields-row
          .fields-group.fields-row__column.fields-row__column-6
            .input.select.optional
              .label_input
                = f.select :category_id, [[t('admin.custom_emojis.uncategorized'), nil]] + CustomEmojiCategory.order(:name).all.pluck(:name, :id), class: 'select optional', 'aria-label': t('admin.custom_emojis.assign_category')
          .fields-group.fields-row__column.fields-row__column-6
            .input.string.optional
              .label_input
                = f.text_field :category_name, class: 'string optional', placeholder: t('admin.custom_emojis.create_new_category'), 'aria-label': t('admin.custom_emojis.create_new_category')
  .fields-group
    = f.input :shortcode, wrapper: :with_label, label: t('admin.custom_emojis.shortcode'), hint: t('admin.custom_emojis.shortcode_hint'), fedibird_features: true
  .fields-group
    = f.input :image, wrapper: :with_label, label: t('admin.custom_emojis.image'), input_html: { accept: (CustomEmoji::IMAGE_FILE_EXTENSIONS + CustomEmoji::IMAGE_MIME_TYPES).join(',') }, hint: t('admin.custom_emojis.image_hint', kbsize: CustomEmoji::LOCAL_LIMIT / 1.kilobytes, types: (CustomEmoji::IMAGE_MIME_TYPES - CustomEmoji::IMAGE_CONVERTIBLE_MIME_TYPES).map{|t| t.delete_prefix('image/').upcase}.join(', '))
  .fields-group
    = f.input :alternate_name, wrapper: :with_label, label: t('admin.custom_emojis.alternate_name.title'), hint: t('admin.custom_emojis.alternate_name.hint'), input_html: { autofocus: true }, fedibird_features: true
  .fields-group
    = f.input :ruby, wrapper: :with_label, label: t('admin.custom_emojis.ruby.title'), hint: t('admin.custom_emojis.ruby.hint'), fedibird_features: true
  .fields-group
    = f.input :keywords, as: :text, wrapper: :with_label, label: t('admin.custom_emojis.keywords.title'), hint: t('admin.custom_emojis.keywords.hint'), input_html: { rows: 2 }, fedibird_features: true
  .fields-group
    = f.input :creator, wrapper: :with_label, label: t('admin.custom_emojis.creator.title'), fedibird_features: true
  .fields-group
    = f.input :copyright_notice, as: :text, wrapper: :with_label, label: t('admin.custom_emojis.copyright_notice.title'), hint: t('admin.custom_emojis.copyright_notice.hint'), input_html: { rows: 4 }, fedibird_features: true
  .fields-group
    = f.input :credit_text, as: :text, wrapper: :with_label, label: t('admin.custom_emojis.credit_text.title'), hint: t('admin.custom_emojis.credit_text.hint'), input_html: { rows: 4 }, fedibird_features: true
  .fields-group
    = f.input :license, wrapper: :with_label, label: t('admin.custom_emojis.license.title'), hint: t('admin.custom_emojis.license.hint'), fedibird_features: true
  .fields-group
    = f.input :copy_permission, collection: CustomEmoji.copy_permissions.keys, wrapper: :with_label, label: t('admin.custom_emojis.copy_permission.title'), include_blank: false, label_method: lambda { |copy_permission| safe_join([I18n.t("admin.custom_emojis.copy_permission.#{copy_permission}"), I18n.t("admin.custom_emojis.copy_permission.#{copy_permission}_long")], ' - ') }, required: false, hint: false, fedibird_features: true
  .fields-group
    = f.input :usage_info, as: :text, wrapper: :with_label, label: t('admin.custom_emojis.usage_info.title'), hint: t('admin.custom_emojis.usage_info.hint'), input_html: { rows: 4 }, fedibird_features: true
  .fields-group
    = f.input :related_link, as: :text, wrapper: :with_label, label: t('admin.custom_emojis.related_link.title'), hint: t('admin.custom_emojis.related_link.hint'), input_html: { rows: 4 }, fedibird_features: true
  .fields-group
    = f.input :description, as: :text, wrapper: :with_label, label: t('admin.custom_emojis.description.title'), input_html: { rows: 4 }, fedibird_features: true
  .fields-group
    = f.input :sensitive, as: :boolean, wrapper: :with_label, label: t('admin.custom_emojis.sensitive.title'), hint: t('admin.custom_emojis.sensitive.hint'), fedibird_features: true
  .fields-group
    = f.input :misskey_license, as: :text, wrapper: :with_label, label: t('admin.custom_emojis.misskey_license.title'), hint: t('admin.custom_emojis.misskey_license.hint'), input_html: { rows: 2 }, fedibird_features: true

  .actions
    - if @custom_emoji.local?
      = f.button :button, t('admin.custom_emojis.save_changes_and_next'), name: :update_and_next, type: :submit
      = f.button :button, t('admin.custom_emojis.save_changes'), name: :update, type: :submit
    = f.button :button, t('admin.custom_emojis.go_to_index'), name: :go_to_index, type: :submit
