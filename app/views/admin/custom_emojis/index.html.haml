- content_for :page_title do
  = t('admin.custom_emojis.title')

- content_for :header_tags do
  = javascript_pack_tag 'admin', async: true, crossorigin: 'anonymous'

- if can?(:create, :custom_emoji)
  - content_for :heading_actions do
    = link_to t('admin.custom_emojis.upload'), new_admin_custom_emoji_path, class: 'button'

.filters
  .filter-subset
    %strong= t('admin.accounts.location.title')
    %ul
      %li= filter_link_to t('admin.accounts.location.all'), local: nil, remote: nil
      %li
        - if selected? local: '1', remote: nil
          = filter_link_to t('admin.accounts.location.local'), {local: nil, remote: nil}, {local: '1', remote: nil}
        - else
          = filter_link_to t('admin.accounts.location.local'), local: '1', remote: nil
      %li
        - if selected? remote: '1', local: nil
          = filter_link_to t('admin.accounts.location.remote'), {remote: nil, local: nil}, {remote: '1', local: nil}
        - else
          = filter_link_to t('admin.accounts.location.remote'), remote: '1', local: nil

  .filter-subset
    %strong= t('admin.custom_emojis.keywords.title')
    %ul
      %li= filter_link_to t('admin.custom_emojis.keywords.all'), keywords: nil
      %li= filter_link_to t('admin.custom_emojis.keywords.unset'), keywords: '0'
      %li= filter_link_to t('admin.custom_emojis.keywords.set'), keywords: '1'

  .filter-subset
    %strong= t('admin.custom_emojis.copy_permission.title')
    %ul
      %li= filter_link_to t('admin.custom_emojis.copy_permission.all'), copy_permission: nil
      %li= filter_link_to t('admin.custom_emojis.copy_permission.none'), copy_permission: :none
      %li= filter_link_to t('admin.custom_emojis.copy_permission.allow'), copy_permission: :allow
      %li= filter_link_to t('admin.custom_emojis.copy_permission.deny'), copy_permission: :deny
      %li= filter_link_to t('admin.custom_emojis.copy_permission.conditional'), copy_permission: :conditional

  .filter-subset
    %strong= t('admin.custom_emojis.license.title')
    %ul
      %li= filter_link_to t('admin.custom_emojis.license.all'), license: nil
      %li= filter_link_to t('admin.custom_emojis.license.unset'), license: '0'
      %li= filter_link_to t('admin.custom_emojis.license.set'), license: '1'

  .filter-subset
    %strong= t('admin.custom_emojis.order.title')
    %ul
      %li= filter_link_to t('admin.custom_emojis.order.alphabetic'), order: nil
      %li= filter_link_to t('admin.custom_emojis.order.newer'), order: '0'
      %li= filter_link_to t('admin.custom_emojis.order.older'), order: '1'

  .filter-subset
    %strong= t('admin.custom_emojis.visibility.title')
    %ul
      %li= filter_link_to t('admin.custom_emojis.visibility.all'), visibility: nil
      %li= filter_link_to t('admin.custom_emojis.visibility.hide'), visibility: '0'
      %li= filter_link_to t('admin.custom_emojis.visibility.show'), visibility: '1'

  .filter-subset
    %strong= t('admin.custom_emojis.status.title')
    %ul
      %li= filter_link_to t('admin.custom_emojis.status.all'), status: nil
      %li= filter_link_to t('admin.custom_emojis.status.disable'), status: '0'
      %li= filter_link_to t('admin.custom_emojis.status.enable'), status: '1'

  .filter-subset
    %strong= t('admin.custom_emojis.sensitive.title')
    %ul
      %li= filter_link_to t('admin.custom_emojis.sensitive.all'), sensitive: nil
      %li= filter_link_to t('admin.custom_emojis.sensitive.unset'), sensitive: '0'
      %li= filter_link_to t('admin.custom_emojis.sensitive.set'), sensitive: '1'

= form_tag admin_custom_emojis_url, method: 'GET', class: 'simple_form' do
  .fields-group
    - CustomEmojiFilter::KEYS.each do |key|
      = hidden_field_tag key, params[key] if params[key].present?

  .fields-row
    .fields-group.fields-row__column.fields-row__column-8
      .input.string.optional
        = text_field_tag :shortcode, params[:shortcode], class: 'string optional', placeholder: I18n.t("admin.custom_emojis.shortcode")
    .fields-group.fields-row__column.fields-row__column-4
      .input.string.optional
        = select_tag :shortcode_match_type, options_for_select(Form::CustomEmojiBatch::SHORTCODE_MATCH_TYPES.map { |shortcode_match_type| [I18n.t("admin.custom_emojis.shortcode_match_type.#{shortcode_match_type}"), shortcode_match_type]}, selected: params[:shortcode_match_type]), class: 'select optional', 'aria-label': t('admin.custom_emojis.shortcode_match_type.prompt')

  .fields-group
    - %i(by_domain category by_description).each do |key|
      .input.string.optional
        = text_field_tag key, params[key], class: 'string optional', placeholder: I18n.t("admin.custom_emojis.#{key}")

  .fields-group
    .actions
      %button.button= t('admin.accounts.search')
      = link_to t('admin.accounts.reset'), admin_custom_emojis_path, class: 'button negative'

= form_for(@form, url: batch_admin_custom_emojis_path) do |f|
  = hidden_field_tag :page, params[:page] || 1

  - CustomEmojiFilter::KEYS.each do |key|
    = hidden_field_tag key, params[key] if params[key].present?

  .batch-table
    .batch-table__toolbar
      %label.batch-table__toolbar__select.batch-checkbox-all
        = check_box_tag :batch_checkbox_all, nil, false
      .batch-table__toolbar__actions
        - if params[:local] == '1'
          = f.button safe_join([fa_icon('save'), t('admin.custom_emojis.apply_batch_assignment')]), name: :update, class: 'table-action-link', type: :submit, data: { confirm: t('admin.reports.are_you_sure') }

          = f.button safe_join([fa_icon('eye'), t('admin.custom_emojis.list')]), name: :list, class: 'table-action-link', type: :submit, data: { confirm: t('admin.reports.are_you_sure') }

          = f.button safe_join([fa_icon('eye-slash'), t('admin.custom_emojis.unlist')]), name: :unlist, class: 'table-action-link', type: :submit, data: { confirm: t('admin.reports.are_you_sure') }

        = f.button safe_join([fa_icon('power-off'), t('admin.custom_emojis.enable')]), name: :enable, class: 'table-action-link', type: :submit, data: { confirm: t('admin.reports.are_you_sure') }

        = f.button safe_join([fa_icon('power-off'), t('admin.custom_emojis.disable')]), name: :disable, class: 'table-action-link', type: :submit, data: { confirm: t('admin.reports.are_you_sure') }

        - if can?(:fetch, :custom_emoji)
          = f.button safe_join([fa_icon('refresh'), t('admin.custom_emojis.fetch')]), name: :fetch, class: 'table-action-link', type: :submit, data: { confirm: t('admin.reports.are_you_sure') }

        - if can?(:destroy, :custom_emoji)
          = f.button safe_join([fa_icon('times'), t('admin.custom_emojis.delete')]), name: :delete, class: 'table-action-link', type: :submit, data: { confirm: t('admin.reports.are_you_sure') }

        - if can?(:copy, :custom_emoji) && params[:local] != '1'
          = f.button safe_join([fa_icon('copy'), t('admin.custom_emojis.copy')]), name: :copy, class: 'table-action-link', type: :submit, data: { confirm: t('admin.reports.are_you_sure') }
          = f.button safe_join([fa_icon('copy'), t('admin.custom_emojis.copy_ow')]), name: :copy_ow, class: 'table-action-link', type: :submit, data: { confirm: t('admin.reports.are_you_sure') }

    - if params[:local] == '1'
      .batch-table__form.simple_form
        .fields-row
          .fields-group.fields-row__column.fields-row__column-6
            .input.select.optional
              .label_input
                = f.select :category_id, options_from_collection_for_select(CustomEmojiCategory.all.order(:name), 'id', 'name'), prompt: t('admin.custom_emojis.assign_category'), class: 'select optional', 'aria-label': t('admin.custom_emojis.assign_category')

          .fields-group.fields-row__column.fields-row__column-6
            .input.string.optional
              .label_input
                = f.text_field :category_name, class: 'string optional', placeholder: t('admin.custom_emojis.create_new_category'), 'aria-label': t('admin.custom_emojis.create_new_category')

        .fields-row
          .fields-group.fields-row__column.fields-row__column-6
            .input.select.optional
              .label_input
                = f.select :keyword_action, options_for_select(Form::CustomEmojiBatch::KEYWORD_ACTIONS.map { |keyword_action| [I18n.t("admin.custom_emojis.keyword_action.#{keyword_action}"), keyword_action]}), class: 'select optional', 'aria-label': t('admin.custom_emojis.keyword_action.prompt')

          .fields-group.fields-row__column.fields-row__column-6
            .input.string.optional
              .label_input
                = f.text_field :keyword_action_value, class: 'string optional', placeholder: t('admin.custom_emojis.keyword_action.value'), 'aria-label': t('admin.custom_emojis.keyword_action.value')

        .fields-row
          .fields-group.fields-row__column.fields-row__column-12
            .input.string.optional
              .label_input
                = f.text_area :description, class: 'string optional', placeholder: t('admin.custom_emojis.description.title'), 'aria-label': t('admin.custom_emojis.description.title')

        .fields-row
          .fields-group.fields-row__column.fields-row__column-6
            .input.select.optional
              .label_input
                = f.text_field :creator, class: 'string optional', placeholder: t('admin.custom_emojis.creator.title'), 'aria-label': t('admin.custom_emojis.creator.title')

          .fields-group.fields-row__column.fields-row__column-6
            .input.select.optional
              .label_input
                = f.select :copy_permission, options_for_select(Form::CustomEmojiBatch::COPY_PERMISSION_ACTIONS.map { |copy_permission_action| [I18n.t("admin.custom_emojis.copy_permission_action.#{copy_permission_action}"), copy_permission_action]}), class: 'select optional', 'aria-label': t('admin.custom_emojis.copy_permission_action.prompt')

        .fields-row
          .fields-group.fields-row__column.fields-row__column-12
            .input.string.optional
              .label_input
                = f.text_area :copyright_notice, class: 'string optional', placeholder: t('admin.custom_emojis.copyright_notice.title'), 'aria-label': t('admin.custom_emojis.copyright_notice.title')

        .fields-row
          .fields-group.fields-row__column.fields-row__column-12
            .input.string.optional
              .label_input
                = f.text_area :credit_text, class: 'string optional', placeholder: t('admin.custom_emojis.credit_text.title'), 'aria-label': t('admin.custom_emojis.credit_text.title')

        .fields-row
          .fields-group.fields-row__column.fields-row__column-12
            .input.string.optional
              .label_input
                = f.text_field :license, class: 'string optional', placeholder: t('admin.custom_emojis.license.title'), 'aria-label': t('admin.custom_emojis.license.title')

        .fields-row
          .fields-group.fields-row__column.fields-row__column-12
            .input.string.optional
              .label_input
                = f.text_area :usage_info, class: 'string optional', placeholder: t('admin.custom_emojis.usage_info.title'), 'aria-label': t('admin.custom_emojis.usage_info.title')

        .fields-row
          .fields-group.fields-row__column.fields-row__column-12
            .input.string.optional
              .label_input
                = f.text_area :related_link, class: 'string optional', placeholder: t('admin.custom_emojis.related_link.title'), 'aria-label': t('admin.custom_emojis.related_link.title')

        .fields-row
          .fields-group.fields-row__column.fields-row__column-12
            .input.string.optional
              .label_input
                = f.text_area :misskey_license, class: 'string optional', placeholder: t('admin.custom_emojis.misskey_license.title'), 'aria-label': t('admin.custom_emojis.misskey_license.title')

    .batch-table__body
      - if @custom_emojis.empty?
        = nothing_here 'nothing-here--under-tabs'
      - else
        = render partial: 'custom_emoji', collection: @custom_emojis, locals: { f: f }

= paginate @custom_emojis

